from Crypto.Util.number import *
import math

p = 310013024566643256138761337388255591613
q = 319848228152346890121384041219876391791
n =  99157116611790833573985267443453374677300242114595736901854871276546481648883
g = 99157116611790833573985267443453374677300242114595736901854871276546481648884
c = 2433283484328067719826123652791700922735828879195114568755579061061723786565164234075183183699826399799223318790711772573290060335232568738641793425546869

def decrypt(p, q, g, c):
    n = p * q
    n_sq = n * n
    l = (p-1)*(q-1)
    x = pow(c, l, n_sq) - 1
    plain = ((x // n) * inverse(l, n)) % n
    return plain

print(long_to_bytes(decrypt(p, q, g, c)))
